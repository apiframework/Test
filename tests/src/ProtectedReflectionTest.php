<?php

/**
 * @author Hone Watson
 * @email code@hone.be
 * @copyright  Copyright (c) 2013 Hone Watson
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
class ProtectedReflectionTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Apiframework\Test\ProtectedReflection
     */
    protected $ProtectedReflection;

    protected function setUp()
    {

        $this->Robot = new Robot;
        $this->ProtectedReflection = new Apiframework\Test\ProtectedReflection($this->Robot, new \ReflectionClass($this->Robot));
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testSetProperty()
    {

        $hello = $this->ProtectedReflection->getProperty("hello");
        $this->assertTrue(($hello == "hello"));
    }


    public function testGetProperty()
    {

        $this->ProtectedReflection->setProperty("world", "mouse");
        $this->assertTrue(($this->ProtectedReflection->getProperty("world") == "mouse"));

    }

    public function testGetMethod()
    {

        $method = $this->ProtectedReflection->getMethod("hello");
        $this->assertInstanceOf('\ReflectionMethod', $method);
        $this->assertTrue(($method->name == "hello"));
        $this->assertTrue(($method->class == "Robot"));
    }

    public function testInvokeMethod()
    {

        $result = $this->ProtectedReflection->invokeMethod("helloOne", ["biggy"]);
        $this->assertTrue(($result == 'hello biggy'));
        $result = $this->ProtectedReflection->invokeMethod("helloTwo", ["tweety", "bird"]);
        $this->assertTrue(($result == 'hello tweety bird'));
    }

}
 